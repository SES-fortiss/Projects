package org.fortiss.smg.webrest.impl;import java.util.concurrent.TimeoutException;import org.eclipse.jetty.servlet.ServletHolder;import org.fortiss.smg.ambulance.api.AmbulanceInterface;import org.fortiss.smg.ambulance.api.AmbulanceQueueNames;import org.fortiss.smg.remoteframework.lib.DefaultProxy;import org.fortiss.smg.remoteframework.lib.DefaultServer;import org.fortiss.smg.webrest.api.WebRestInterface;import org.fortiss.smg.webrest.api.WebRestQueueNames;import org.fortiss.smg.webrest.impl.jersey.JerseyApplication;import org.fortiss.smg.webrest.impl.jersey.ServerController;import org.fortiss.smg.webrest.impl.jersey.URIServletContainer;import org.osgi.framework.BundleActivator;import org.osgi.framework.BundleContext;import org.slf4j.LoggerFactory;public class WebRestActivator implements BundleActivator {	DefaultServer<WebRestInterface> server;	private ServerController serverREST;	// WebRestImpl impl;	// Logger from sl4j	private static org.slf4j.Logger logger = LoggerFactory.getLogger(WebRestActivator.class);	@Override	public void start(BundleContext context) throws Exception {		logger.debug("I am starting here");		DefaultProxy<AmbulanceInterface> ambulanceClient = new DefaultProxy<AmbulanceInterface>(				AmbulanceInterface.class, AmbulanceQueueNames.getAmbulanceQueue(), 5000);		AmbulanceInterface ambuInt = ambulanceClient.init();		ambuInt.registerComponent(WebRestQueueNames.getWebRestInterfaceQueue(), "REST");		ambulanceClient.destroy();		BundleFactory.activate();		try {			logger.debug("getKey: " + BundleFactory.getIKeyManager().getKey("68a45057-5734-4dad-9f86-ab9e32c4506e"));		} catch (TimeoutException e) {		}		// set here our port for REST		serverREST = new ServerController();		// TODO: JerseyApp is strange. I can't really understand this		serverREST.start(8091, new ServletHolder(new URIServletContainer(new JerseyApplication())));		logger.info("WebRest is started");	}	@Override	public void stop(BundleContext context) throws Exception {		// REMEMBER to destroy all resources, threads and do cleanup		// server.destroy();		serverREST.stop();		logger.info("WebRest is dead");	}}