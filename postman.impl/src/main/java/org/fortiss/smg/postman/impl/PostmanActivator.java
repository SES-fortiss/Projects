package org.fortiss.smg.postman.impl;import org.fortiss.smg.ambulance.api.AmbulanceInterface;import org.fortiss.smg.ambulance.api.AmbulanceQueueNames;import org.fortiss.smg.postman.api.PostmanInterface;import org.fortiss.smg.postman.api.PostmanQueueNames;import org.fortiss.smg.remoteframework.lib.DefaultProxy;import org.fortiss.smg.remoteframework.lib.RabbitRPCServer;import org.osgi.framework.BundleActivator;import org.osgi.framework.BundleContext;import org.slf4j.Logger;public class PostmanActivator implements BundleActivator {	private static final int TIMEOUTSHORT = 2000;	private static final int TIMEOUTLONG = 5000;		RabbitRPCServer<PostmanInterface> server;    PostmanImpl impl;    private static Logger logger = org.slf4j.LoggerFactory.getLogger( PostmanInterface.class );        @Override    public void start(BundleContext context) throws Exception {        // register here your services etc.        // DO NOT start heavy operations here - use threads    	DefaultProxy<AmbulanceInterface> ambulanceClient = new DefaultProxy<AmbulanceInterface>(				AmbulanceInterface.class,				AmbulanceQueueNames.getAmbulanceQueue(), TIMEOUTLONG);		AmbulanceInterface ambuInt = ambulanceClient.init();		ambuInt.registerComponent(PostmanQueueNames.getPostmanInterfaceQueue(), "Postman");		ambulanceClient.destroy();		String mailFrom = context.getProperty("postman.mailFrom");  //"Fortiss.Coffee@fortiss.org";		String mailHost = context.getProperty("postman.mailHost");  //"merkur.fortiss.org";		String mailPort = context.getProperty("postman.mailPort");  //"25";    	String ircServer = context.getProperty("postman.ircServer"); //"192.168.21.240";		        impl = new PostmanImpl(mailFrom, mailHost, mailPort, ircServer);          server = new RabbitRPCServer<PostmanInterface>(PostmanInterface.class, impl, PostmanQueueNames.getPostmanInterfaceQueue());        server.init();    }    @Override    public void stop(BundleContext context) throws Exception {        // REMEMBER to destroy all resources, threads and do cleanup        server.destroy();    }}